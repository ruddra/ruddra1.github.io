<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Translation | Ruddra's Blog]]></title>
  <link href="http://ruddra.com/blog/categories/translation/atom.xml" rel="self"/>
  <link href="http://ruddra.com/"/>
  <updated>2014-06-26T01:59:37+06:00</updated>
  <id>http://ruddra.com/</id>
  <author>
    <name><![CDATA[Arnab Kumar Shil]]></name>
    <email><![CDATA[ruddra90@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Django Translation Using .po File]]></title>
    <link href="http://ruddra.com/blog/2014/06/25/django-translation-using-po-file/"/>
    <updated>2014-06-25T11:12:09+06:00</updated>
    <id>http://ruddra.com/blog/2014/06/25/django-translation-using-po-file</id>
    <content type="html"><![CDATA[<p>When comes to using multiple languages in one single site, django is very handy. You can use .po file to do your translation for you. Process is very simple: First create .po file. To make .po file I would suggest to use poedit or Rosetta. <!--more--> Here is another option that is using django&rsquo;s very own Localization. Second create a folder name locale within tour django project and add the language named (for example: &lsquo;ru_RU&rsquo; for Russian language) within locale. Within &lsquo;ru_RU&rsquo; folder, create another folder named &lsquo;LC_MESSAGES&rsquo;. There save the .po file you have created. Save the .po file in name &lsquo;django.po&rsquo;. File Map:</p>

<p>{% codeblock %}</p>

<p>&mdash;Project
&mdash;&ndash;|
&mdash;-locale
&mdash;&mdash;|
&mdash;&mdash;-ru_RU
&mdash;&mdash;&mdash;|
&mdash;&mdash;&mdash;-LC_MESSAGES
&mdash;&mdash;&mdash;&mdash;|
&mdash;&mdash;&mdash;&mdash;&mdash;django.po</p>

<p>{% endcodeblock%}</p>

<p>Now run this command: &lsquo;django-admin.py compilemessages&rsquo; to generate .mo file(django.mo). Third comes to final touch. in Language settings in your settings.py add ru_RU like this:</p>

<p>{% codeblock %}
LANGUAGES = (</p>

<pre><code>('en-us', 'English'),
('ru_RU', 'Russian'),
</code></pre>

<p>)</p>

<p>LANGUAGE_CODE = &lsquo;en-us&rsquo; &lsquo;ru_RU&rsquo;</p>

<p>{% endcodeblock %}</p>

<p>Add locale path :</p>

<p>{% codeblock %}</p>

<p>LOCALE_PATHS = (</p>

<pre><code>os.path.join(PROJECT_PATH, '../locale'),
</code></pre>

<p>)</p>

<p>{% endcodeblock %}</p>

<p>and finally add a middleware in in MIDDLEWARE_CLASSES.</p>

<p>{% codeblock %}
&lsquo;django.middleware.locale.LocaleMiddleware&rsquo;</p>

<p>{% endcodeblock %}
 That should the trick.</p>
]]></content>
  </entry>
  
</feed>
